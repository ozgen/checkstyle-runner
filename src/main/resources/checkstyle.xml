<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
    <module name="TreeWalker">
        <module name="UnusedImports"/>
        <module name="AvoidStarImport">
            <property name="severity" value="warning"/>
        </module>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true"/>
            <property name="allowByTailComment" value="true"/>
            <property name="allowNonPrintableEscapes" value="true"/>
        </module>
        <module name="SuppressionCommentFilter"/>
        <module name="LambdaParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>
        <module name="AtclauseOrder">
            <property name="tagOrder" value="@param, @return, @throws, @deprecated"/>
            <property name="target"
                      value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>
        </module>
        <module name="ModifiedControlVariable"/>
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true"/>
            <property name="ignoreSetter" value="true"/>
            <property name="setterCanReturnItsClass" value="true"/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>

        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationMostCases"/>
            <property name="tokens"
                      value="VARIABLE_DEF, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="ArrayTypeStyle"/>
        <module name="BooleanExpressionComplexity"/>
        <module name="CatchParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <module name="CovariantEquals"/>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected|ignore"/>
        </module>
        <module name="FallThrough"/>
        <module name="GenericWhitespace"/>
        <!-- ? -->
        <module name="IllegalThrows"/>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <module name="MethodLength"/>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
        </module>
        <module name="MethodParamPad"/>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <module name="MissingOverride"/>
        <module name="MissingSwitchDefault"/>
        <module name="ModifierOrder"/>
        <module name="NoFinalizer"/>
        <module name="NoWhitespaceBefore">
            <property name="tokens"
                      value="COMMA, SEMI, POST_INC, POST_DEC, DOT, ELLIPSIS, METHOD_REF"/>
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="OneStatementPerLine"/>
        <module name="OneTopLevelClass"/>
        <module name="OuterTypeFilename"/>
        <module name="PackageDeclaration"/>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>
        <module name="ParameterAssignment"/>
        <module name="ParameterName">
            <property name="format" value="^[a-z][a-zA-Z0-9_]+$"/>
        </module>
        <module name="RedundantImport"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTags" value="false"/>
        </module>
        <module name="SingleSpaceSeparator"/>
        <module name="StringLiteralEquality"/>
        <module name="Regexp">
            <property name="format" value="^(?i)//\s*TODO:(?!\s+\d{2}\.\d{2}\.\d{4}\s+[a-zA-Z]+ -).*"/>
            <property name="message" value="Incorrect TODO format"/>
            <property name="illegalPattern" value="true"/>
        </module>
    </module>

</module>
